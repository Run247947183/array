class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] res = {-1, -1};
        if (nums.length == 0) {
            return res;
        }
        // 若目标值比数组首元素还小或者目标值比数组末尾元素还大
        // 那么说明目标值在数组中不存在
        if (target < nums[0] || target > nums[nums.length - 1]) {
            return res;
        }
        for (int i = 0; i < nums.length; i++) {
            // 数组中的当前元素比目标值大，又因为数组是按照升序排列的
            // 则说明查找结束
            if (nums[i] > target) {
                break;
            }
            // 当前元素和目标值相等的情况下
            if (nums[i] == target) {
                // res 数组第一个元素不为 -1 ，说明之前已经找到了目标值的第一个位置
                if (res[0] != -1) {
                    // 则将目标值的最后一个位置进行更新
                    res[1] = i;
                } else {
                    // 找到目标值在数组中的第一个位置
                    res[0] = i;
                }
            }
        }
        // 只存在第一个位置，那么最后一个位置也是第一个位置的下标
        if (res[0] != -1 && res[1] == -1) {
            res[1] = res[0];
        }
        return res;
    }
}
